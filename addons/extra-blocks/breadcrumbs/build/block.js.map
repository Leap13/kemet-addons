{"version":3,"file":"block.js","mappings":"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","sources":["webpack://extra-blocks/./node_modules/classnames/index.js","webpack://extra-blocks/external window [\"wp\",\"blockEditor\"]","webpack://extra-blocks/external window [\"wp\",\"blocks\"]","webpack://extra-blocks/external window [\"wp\",\"coreData\"]","webpack://extra-blocks/external window [\"wp\",\"data\"]","webpack://extra-blocks/external window [\"wp\",\"element\"]","webpack://extra-blocks/external window [\"wp\",\"i18n\"]","webpack://extra-blocks/webpack/bootstrap","webpack://extra-blocks/webpack/runtime/compat get default export","webpack://extra-blocks/webpack/runtime/define property getters","webpack://extra-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://extra-blocks/webpack/runtime/make namespace object","webpack://extra-blocks/./breadcrumbs/block.js"],"sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * External dependencies\r\n */\r\nimport classnames from 'classnames';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { registerBlockType } from '@wordpress/blocks';\r\nimport { __ } from '@wordpress/i18n';\r\nimport { useEntityProp, store as coreStore } from '@wordpress/core-data';\r\nimport {\r\n    AlignmentControl,\r\n    BlockControls,\r\n    useBlockProps\r\n} from '@wordpress/block-editor';\r\nimport { useSelect } from '@wordpress/data';\r\n\r\nregisterBlockType('kemet/breadcrumbs', {\r\n    apiVersion: 2,\r\n    title: __('Kemet Breadcrumbs', 'wp-gb'),\r\n    description: __('The description'),\r\n    category: 'wp-gb',\r\n    icon: 'smiley',\r\n\r\n    edit: ({ attributes, setAttributes, context: { postType, postId, queryId } }) => {\r\n        const [fullTitle] = useEntityProp('postType', postType, 'title', postId);\r\n        const selectedTerm = useSelect(\r\n            (select) => {\r\n                const { getTaxonomy } = select(coreStore);\r\n                const taxonomy = getTaxonomy('category');\r\n                return taxonomy?.visibility?.publicly_queryable ? taxonomy : {};\r\n            },\r\n            ['category']\r\n        );\r\n        const templateType = useSelect((select) => {\r\n            if (!select('core/edit-site')) {\r\n                return;\r\n            }\r\n            const { getEditedPostType, getEditedPostId } = select('core/edit-site');\r\n            const {\r\n                getEditedEntityRecord,\r\n            } = select(coreStore);\r\n            const getEntityArgs = [\r\n                'postType',\r\n                getEditedPostType(),\r\n                getEditedPostId(),\r\n            ];\r\n            const entityRecord = getEditedEntityRecord(...getEntityArgs);\r\n            const type = entityRecord?.area || entityRecord?.slug;\r\n            return type;\r\n        }, []);\r\n        const { postTerms, hasPostTerms } = usePostTerms({\r\n            postId,\r\n            postType,\r\n            term: selectedTerm,\r\n        });\r\n        const categoryName = hasPostTerms ? postTerms[0].name : __('Post Category');\r\n        const { textAlign } = attributes;\r\n        const blockProps = useBlockProps({\r\n            className: classnames({\r\n                [`has-text-align-${textAlign}`]: textAlign\r\n            }),\r\n        });\r\n        const type = templateType || postType;\r\n        return (\r\n            <>\r\n                <BlockControls group=\"block\">\r\n                    <AlignmentControl\r\n                        value={textAlign}\r\n                        onChange={(nextAlign) => {\r\n                            setAttributes({ textAlign: nextAlign });\r\n                        }}\r\n                    />\r\n                </BlockControls>\r\n                <div {...blockProps}>\r\n                    <a\r\n                        href=\"#home-pseudo-link\"\r\n                        onClick={(event) => event.preventDefault()}\r\n                    >\r\n                        {__('Home')}\r\n                    </a>\r\n                    <span class=\"breadcrumb-sep\" style={{ padding: '0 .4em' }}>»</span>\r\n                    {(type === 'post' || type === 'single') && <>\r\n                        <a\r\n                            href=\"#category-pseudo-link\"\r\n                            onClick={(event) => event.preventDefault()}\r\n                        >\r\n                            {categoryName}\r\n                        </a>\r\n                        <span class=\"breadcrumb-sep\" style={{ padding: '0 .4em' }}>»</span>\r\n                    </>}\r\n                    <span>{fullTitle || __('Post Title')}</span>\r\n                </div>\r\n            </>\r\n        )\r\n    },\r\n});\r\n\r\nexport default function usePostTerms({ postId, postType, term }) {\r\n    const { rest_base: restBase, slug } = term;\r\n    const [termIds] = useEntityProp('postType', postType, restBase, postId);\r\n    return useSelect(\r\n        (select) => {\r\n            const visible = term?.visibility?.publicly_queryable;\r\n            if (!visible) {\r\n                return {\r\n                    postTerms: [],\r\n                    _isLoading: false,\r\n                    hasPostTerms: false,\r\n                };\r\n            }\r\n            if (!termIds) {\r\n                // Waiting for post terms to be fetched.\r\n                return { isLoading: term?.postTerms?.includes(postType) };\r\n            }\r\n            if (!termIds.length) {\r\n                return { isLoading: false };\r\n            }\r\n            const { getEntityRecords, isResolving } = select(coreStore);\r\n            const taxonomyArgs = [\r\n                'taxonomy',\r\n                slug,\r\n                {\r\n                    include: termIds,\r\n                    context: 'view',\r\n                },\r\n            ];\r\n            const terms = getEntityRecords(...taxonomyArgs);\r\n            const _isLoading = isResolving('getEntityRecords', taxonomyArgs);\r\n            return {\r\n                postTerms: terms,\r\n                isLoading: _isLoading,\r\n                hasPostTerms: !!terms?.length,\r\n            };\r\n        },\r\n        [termIds, term?.visibility?.publicly_queryable]\r\n    );\r\n}\r\n"],"names":["classnames","registerBlockType","__","useEntityProp","store","coreStore","AlignmentControl","BlockControls","useBlockProps","useSelect","apiVersion","title","description","category","icon","edit","attributes","setAttributes","context","postType","postId","queryId","fullTitle","selectedTerm","select","getTaxonomy","taxonomy","visibility","publicly_queryable","templateType","getEditedPostType","getEditedPostId","getEditedEntityRecord","getEntityArgs","entityRecord","type","area","slug","postTerms","hasPostTerms","usePostTerms","term","categoryName","name","textAlign","blockProps","className","nextAlign","event","preventDefault","padding","rest_base","restBase","termIds","visible","_isLoading","isLoading","includes","length","getEntityRecords","isResolving","taxonomyArgs","include","terms"],"sourceRoot":""}