{"version":3,"file":"block.js","mappings":"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","sources":["webpack://extra-blocks/./breadcrumbs/block.js","webpack://extra-blocks/./breadcrumbs/edit.js","webpack://extra-blocks/./node_modules/classnames/index.js","webpack://extra-blocks/./breadcrumbs/style.scss","webpack://extra-blocks/external window [\"wp\",\"blockEditor\"]","webpack://extra-blocks/external window [\"wp\",\"blocks\"]","webpack://extra-blocks/external window [\"wp\",\"components\"]","webpack://extra-blocks/external window [\"wp\",\"coreData\"]","webpack://extra-blocks/external window [\"wp\",\"data\"]","webpack://extra-blocks/external window [\"wp\",\"element\"]","webpack://extra-blocks/external window [\"wp\",\"i18n\"]","webpack://extra-blocks/webpack/bootstrap","webpack://extra-blocks/webpack/runtime/chunk loaded","webpack://extra-blocks/webpack/runtime/compat get default export","webpack://extra-blocks/webpack/runtime/define property getters","webpack://extra-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://extra-blocks/webpack/runtime/make namespace object","webpack://extra-blocks/webpack/runtime/jsonp chunk loading","webpack://extra-blocks/webpack/before-startup","webpack://extra-blocks/webpack/startup","webpack://extra-blocks/webpack/after-startup"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { registerBlockType } from '@wordpress/blocks';\r\nimport { __ } from '@wordpress/i18n';\r\n\r\nimport './style.scss';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport json from './block.json';\r\nimport edit from './edit';\r\n\r\nconst { name } = json;\r\n\r\nregisterBlockType(name, {\r\n    /**\r\n     * @see ./edit.js\r\n     */\r\n    edit,\r\n});\r\n\r\n","/**\r\n * External dependencies\r\n */\r\nimport classnames from 'classnames';\r\n\r\n/**\r\n* WordPress dependencies\r\n*/\r\nimport { useEntityProp, store as coreStore } from '@wordpress/core-data';\r\nimport {\r\n    AlignmentControl,\r\n    BlockControls,\r\n    useBlockProps,\r\n    InspectorControls\r\n} from '@wordpress/block-editor';\r\nimport { useSelect } from '@wordpress/data';\r\nimport { __ } from '@wordpress/i18n';\r\nimport { PanelBody, CustomSelectControl, TextControl, Dashicon } from '@wordpress/components';\r\n\r\nexport default function Edit({ attributes, setAttributes, context: { postType, postId } }) {\r\n    const [fullTitle] = useEntityProp('postType', postType, 'title', postId);\r\n    const selectedTerm = useSelect(\r\n        (select) => {\r\n            const { getTaxonomy } = select(coreStore);\r\n            const taxonomy = getTaxonomy('category');\r\n            return taxonomy?.visibility?.publicly_queryable ? taxonomy : {};\r\n        },\r\n        ['category']\r\n    );\r\n    const templateType = useSelect((select) => {\r\n        if (!select('core/edit-site')) {\r\n            return;\r\n        }\r\n        const { getEditedPostType, getEditedPostId } = select('core/edit-site');\r\n        const {\r\n            getEditedEntityRecord,\r\n        } = select(coreStore);\r\n        const getEntityArgs = [\r\n            'postType',\r\n            getEditedPostType(),\r\n            getEditedPostId(),\r\n        ];\r\n        const entityRecord = getEditedEntityRecord(...getEntityArgs);\r\n        const type = entityRecord?.area || entityRecord?.slug;\r\n        return type;\r\n    }, []);\r\n    const { postTerms, hasPostTerms } = usePostTerms({\r\n        postId,\r\n        postType,\r\n        term: selectedTerm,\r\n    });\r\n    const categoryName = hasPostTerms ? postTerms[0].name : __('Post Category');\r\n    const { textAlign } = attributes;\r\n    const blockProps = useBlockProps({\r\n        className: classnames({\r\n            [`has-text-align-${textAlign}`]: textAlign\r\n        }),\r\n    });\r\n    const type = templateType || postType;\r\n    const divider = attributes.divider ? attributes.divider : \"»\";\r\n    const prefix = attributes.prefix;\r\n    const separator = <span class=\"breadcrumb-sep\" style={{ padding: '0 .4em' }}>{divider}</span>;\r\n    const homeItemType = attributes.homeItemType === 'text' ? __('Home') : <Dashicon icon='admin-home' />;\r\n    const selectOptions = [\r\n        {\r\n            key: 'text',\r\n            name: __('Text', 'kemet'),\r\n        },\r\n        {\r\n            key: 'icon',\r\n            name: __('Icon', 'kemet'),\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <BlockControls group=\"block\">\r\n                <AlignmentControl\r\n                    value={textAlign}\r\n                    onChange={(nextAlign) => {\r\n                        setAttributes({ textAlign: nextAlign });\r\n                    }}\r\n                />\r\n            </BlockControls>\r\n            <div {...blockProps}>\r\n                {prefix && <span className='prefix' style={{ padding: '0 .4em' }}>{prefix}</span>}\r\n                <a\r\n                    href=\"#home-pseudo-link\"\r\n                    onClick={(event) => event.preventDefault()}\r\n                >\r\n                    {homeItemType}\r\n                </a>\r\n                {separator}\r\n                {(type === 'post' || type === 'single') && <>\r\n                    <a\r\n                        href=\"#category-pseudo-link\"\r\n                        onClick={(event) => event.preventDefault()}\r\n                    >\r\n                        {categoryName}\r\n                    </a>\r\n                    {separator}\r\n                </>}\r\n                <span>{fullTitle || __('Post Title')}</span>\r\n            </div>\r\n            <InspectorControls>\r\n                <PanelBody\r\n                    title={__('General Settings', 'kemet')}\r\n                    initialOpen={true}\r\n                >\r\n                    <TextControl\r\n                        label={__('Breadcrumbs Prefix Text', 'kemet-addons')}\r\n                        value={attributes.prefix}\r\n                        onChange={(val) => setAttributes({ prefix: val })}\r\n                    />\r\n                    <TextControl\r\n                        label={__('Custom Levels Divider', 'kemet-addons')}\r\n                        value={attributes.divider}\r\n                        onChange={(val) => setAttributes({ divider: val })}\r\n                    />\r\n                    <CustomSelectControl\r\n                        label={__('Home Item', 'kemet-addons')}\r\n                        options={selectOptions}\r\n                        onChange={({ selectedItem }) => setAttributes({ homeItemType: selectedItem.key })}\r\n                        value={selectOptions.find((option) => option.key === attributes.homeItemType)}\r\n                    />\r\n                </PanelBody>\r\n            </InspectorControls>\r\n        </>\r\n    )\r\n}\r\n\r\nexport function usePostTerms({ postId, postType, term }) {\r\n    const { rest_base: restBase, slug } = term;\r\n    const [termIds] = useEntityProp('postType', postType, restBase, postId);\r\n    return useSelect(\r\n        (select) => {\r\n            const visible = term?.visibility?.publicly_queryable;\r\n            if (!visible) {\r\n                return {\r\n                    postTerms: [],\r\n                    _isLoading: false,\r\n                    hasPostTerms: false,\r\n                };\r\n            }\r\n            if (!termIds) {\r\n                // Waiting for post terms to be fetched.\r\n                return { isLoading: term?.postTerms?.includes(postType) };\r\n            }\r\n            if (!termIds.length) {\r\n                return { isLoading: false };\r\n            }\r\n            const { getEntityRecords, isResolving } = select(coreStore);\r\n            const taxonomyArgs = [\r\n                'taxonomy',\r\n                slug,\r\n                {\r\n                    include: termIds,\r\n                    context: 'view',\r\n                },\r\n            ];\r\n            const terms = getEntityRecords(...taxonomyArgs);\r\n            const _isLoading = isResolving('getEntityRecords', taxonomyArgs);\r\n            return {\r\n                postTerms: terms,\r\n                isLoading: _isLoading,\r\n                hasPostTerms: !!terms?.length,\r\n            };\r\n        },\r\n        [termIds, term?.visibility?.publicly_queryable]\r\n    );\r\n}\r\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"block\": 0,\n\t\"./style-block\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkextra_blocks\"] = self[\"webpackChunkextra_blocks\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"./style-block\"], function() { return __webpack_require__(\"./breadcrumbs/block.js\"); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["registerBlockType","__","json","edit","name","classnames","useEntityProp","store","coreStore","AlignmentControl","BlockControls","useBlockProps","InspectorControls","useSelect","PanelBody","CustomSelectControl","TextControl","Dashicon","Edit","attributes","setAttributes","context","postType","postId","fullTitle","selectedTerm","select","getTaxonomy","taxonomy","visibility","publicly_queryable","templateType","getEditedPostType","getEditedPostId","getEditedEntityRecord","getEntityArgs","entityRecord","type","area","slug","postTerms","hasPostTerms","usePostTerms","term","categoryName","textAlign","blockProps","className","divider","prefix","separator","padding","homeItemType","selectOptions","key","nextAlign","event","preventDefault","val","selectedItem","find","option","rest_base","restBase","termIds","visible","_isLoading","isLoading","includes","length","getEntityRecords","isResolving","taxonomyArgs","include","terms"],"sourceRoot":""}